/* Custom Mixins. You can delare your own mixins here. */

/* Add rounded corners to all sides */
@mixin rounded($radius: 10px) {
	border-radius: $radius;
	-moz-border-radius: $radius;
	-webkit-border-radius: $radius;
}

/* Add rounded corners to certain sides */
@mixin roundedSides($topLeft, $topRight, $bottomRight, $bottomLeft) {
	-moz-border-radius-topleft: $topLeft;
	-moz-border-radius-topright: $topRight;
	-moz-border-radius-bottomright: $bottomRight;
	-moz-border-radius-bottomleft: $bottomLeft;
	border-top-left-radius: $topLeft;
	border-top-right-radius: $topRight;
	border-bottom-right-radius: $bottomRight;
	border-bottom-left-radius: $bottomLeft;
}

@mixin textShadow($x-axis:1px, $y-axis:1px, $casting:1px, $color:#FFF) {
	text-shadow: $x-axis $y-axis $casting $color;
}

@mixin shadow( $off-y:1px, $off-x:1px, $blur:2px, $color:#444) {
	-moz-box-shadow: $off-y $off-x $blur $color;
	-webkit-box-shadow: $off-y $off-x $blur $color;
	box-shadow: $off-y $off-x $blur $color;
}

@mixin gradient($baseColor:#333, $toColor:#111) {
	background-color: $baseColor;
	background-image: -moz-linear-gradient(top, $baseColor, $toColor); /* FF3.6 */
	background-image: -webkit-gradient(linear,left top,left bottom, color-stop(0, $baseColor),color-stop(1, $toColor)); /* Saf4+, Chrome */
	background-image: linear-gradient(top,$baseColor, $toColor);
}

/* This is a particularly useful mixin if you want to add slick CSS3 animations to elements */
@mixin transition($property:all, $duration:0.5s, $function: ease-in-out) {
	-moz-transition: $property $duration $function; /* FF3.7+ */
	-o-transition: $property $duration $function; /* Opera 10.5 */
	-webkit-transition: $property $duration $function; /* Saf3.2+, Chrome */
	transition: $property $duration $function;
}

@mixin transform($scale, $rotate, $trans-x, $trans-y, $skew-x, $skew-y) {
	-moz-transform: scale($scale) rotate($rotate) translate($trans-x, $trans-y) skew(skew-x, skew-y);
	-webkit-transform: scale($scale) rotate($rotate) translate($trans-x, $trans-y) skew(skew-x, skew-y);
	-o-transform: scale($scale) rotate($rotate) translate($trans-x, $trans-y) skew(skew-x, skew-y);
	-ms-transform: scale($scale) rotate($rotate) translate($trans-x, $trans-y) skew(skew-x, skew-y);
	transform: scale($scale) rotate($rotate) translate($trans-x, $trans-y) skew(skew-x, skew-y);
}

@mixin scale($scale:1) {
	-moz-transform: scale($scale);
	-webkit-transform: scale($scale);
	-o-transform: scale($scale);
	-ms-transform: scale($scale);
	transform: scale($scale);
}

@mixin clearfix {
	display: inline-block;
	&:after {
		content: ".";
		display: block;
		height: 0;
		clear: both;
		visibility: hidden;
	}
	* html & {
		height: 1px
	}

}

@mixin fontFace ($name) {
	@font-face {
		font-family: 'FontName';
		src: url('../fonts/$name.eot');
		src: url('../fonts/$name.eot?iefix') format('eot'),
		url('../fonts/$name.woff') format('woff'),
		url('../fonts/$name.ttf') format('truetype'),
		url('../fonts/$name.svg#webfontZam02nTh') format('svg');
		font-weight: normal;
		font-style: normal;
	}

}
